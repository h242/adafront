
Operadores 
>>>>Matematicos (según jerarquía)
		*
		/
		+
		-
		modulo ("resto" de una división entera. ES DISTINTA A LA DEF que tengo yo, ojo. EJ 10/2 para saber si un numero es par o impar (????¿¿¿))

>>>>Comparación
		>
		<
		<=
		>=
		!=
		==
		! 	not
		=== equivalencia 


	x= 3 (tipo de dato: entero)
	y= 3.0  (tipo de dato: real o mejor: decimal)
	¿x==y? son iguales? TRUE
	¿x===y? son equivalentes? FALSE 
		osea que == es más débil que ===

>>>>Lógicos
	&&	and
	||	or 
	!	not

	TABLA DE VERDAD (0 false, 1 true) *chequear la de NOT*
	X 	Y 		AND 	OR 		NOT 	XOR
				(x*y)	(x+y)	????
	0	0		0		0		0		0
	0	1		0		1		1		1	
	1	0		0		1		1		1
	1	1		1		1		0		0


Concatenación de clases 
	en CSS para anidar, usamos espacio y para concatenar, coma.

		&.clase {
			};

		puedo trabajar con pseudoclases (:hover, :active, :visited, :before, :after) 

MIXINS y funciones
	(es igual a funciones??)
	hay fx con parámetros, y sin (ej clear)


Los valores que le paso a una fx para que haga algo, se llaman parámetros. las fx pueden o no devolver algo.
una condición tiene solo dos valores posibles: 0/1, true/false

file:///C:/Users/jimena.piano/Desktop/ADA/frontendV3/modulo2-css/teorico/06-Less&Sass.pdf

	> hoja 21 no tiene parametros
		en la 1er regla, se declara la fx
		en la 2da, se invoca
	Existen funciones propias del lenguaje (no necesitamos definir) y fx creadas por el usuario, que necesitan declararse.

	> hoja 22 le estoy pasando par. en el footer, estoy pisando el 5 y poniendo 10. Podría, al declararla, ponerle como valor por defecto 0 y listo. (si le paso otro, se pisa.)

	> hoja 24: los parámetros están inicializados.






















TIPOS DE DATOS
JS no exije que declare qué tipo de datos es la var


>>> https://caniuse.com